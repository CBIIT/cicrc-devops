pipeline {
	agent {
		node {
			label 'slave-ncias-d2999-c'
		}
	}

	parameters {

		gitParameter(branchFilter: 'origin/(.*)',
            defaultValue: 'main',
            name: 'Branch',
            type: 'PT_BRANCH_TAG',
            quickFilterEnabled: false,
            selectedValue: 'DEFAULT',
            sortMode: 'ASCENDING_SMART',
            tagFilter: '*',
            useRepository: 'https://github.com/CBIIT/CICRC.git')

  }

  stages{
  	stage('checkout'){

  		steps {

  		checkout([$class: 'GitSCM',
			branches: [[name: '*/main']],
			doGenerateSubmoduleConfigurations: false,
			extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: 'cicrc-devops']],
			submoduleCfg: [],
			userRemoteConfigs:
			[[url: 'https://github.com/CBIIT/cicrc-devops.git']]])

		checkout([$class: 'GitSCM',
            branches: [[name: "${params.Branch}"]], 
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: 'cicrc-devops/docker/CICRC']],
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: 'cicrc-github-jenkins', url: 'https://github.com/CBIIT/CICRC.git']]])

        }

  	}

  	stage('build'){

	    environment {

			CODE_BRANCH = "${params.Branch}"
			REGION      = "us-east-1"
			ECR_REPO    = "cicrc-web"

        }

 		steps {

 			script {

			    sh label: 'Docker-Build', script: '''#!/bin/bash

				# build CICRC Docker container
				echo "Building: $ECR_REPO:$CODE_BRANCH.$BUILD_NUMBER"
				aws_account=$(aws sts get-caller-identity --query "Account" --output text)
				repo_url="$aws_account.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO"

				cd $WORKSPACE/cicrc-devops/docker && docker build -t $repo_url:$CODE_BRANCH.$BUILD_NUMBER .

				# login and push to ECR
				docker login -u AWS -p $(aws ecr get-login-password --region $REGION) $repo_url
				docker push $aws_account.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO:$CODE_BRANCH.$BUILD_NUMBER

				'''

			}

 		}

  	}

  }

  post {

    cleanup {

        cleanWs()

    }

  }

}