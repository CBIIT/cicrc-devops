pipeline {
	agent {
		node {
			label 'slave-ncias-d2999-c'
		}
	}

	parameters {

		gitParameter(branchFilter: 'origin/(.*)', 
			defaultValue: 'main', 
			name: 'CICRC-Branch', 
			type: 'PT_BRANCH_TAG',
			quickFilterEnabled: true, 
			selectedValue: 'DEFAULT', 
			sortMode: 'ASCENDING_SMART', 
			tagFilter: '*', 
			useRepository: 'https://github.com/CBIIT/CICRC.git')

  }

  options {
  
  	ansiColor('xterm')
  
  }

  stages{
  	stage('checkout'){
  		steps {

  		checkout([$class: 'GitSCM',
			branches: [[name: '*/main']],
			doGenerateSubmoduleConfigurations: false,
			extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: 'cicrc-devops']],
			submoduleCfg: [],
			userRemoteConfigs:
			[[url: 'https://github.com/CBIIT/cicrc-devops.git']]])

		checkout([$class: 'GitSCM',
			branches: [[name: "${params.CICRC-Branch}"]],
			doGenerateSubmoduleConfigurations: false,
			extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: 'cicrc-devops/docker/CICRC']],
			submoduleCfg: [],
			userRemoteConfigs: [[credentialsId: 'cicrc-github',url: 'https://github.com/CBIIT/CICRC.git']]])

        }

  	}

  	stage('build'){

 		steps {

 			script {
			
			    sh label: 'Docker-Build', script: '''#!/bin/bash
								
				# build CICRC Docker container
				cd $WORKSPACE/cicrc-devops/docker && docker build .


				'''

			}
			
 		}
		
  	}

  }
  
//  post {
//
//    cleanup {
//
//        cleanWs()
//
//    }
//
//  }
  
}